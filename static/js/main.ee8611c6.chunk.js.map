{"version":3,"sources":["assets/images/LoicNoBg.png","assets/images/ComputerAndMobile.jpg","Theme.ts","routes.ts","components/Text/styles.tsx","components/Text/index.tsx","Animations/animationScheduler.ts","Animations/keyframes.ts","components/MyPicture/styles.tsx","components/BigDot/styles.tsx","pages/Intro/animations.ts","pages/Intro/styles.tsx","components/MyPicture/index.tsx","components/BigDot/index.tsx","pages/Intro/index.tsx","components/ComputerAndMobilePicture/styles.tsx","components/ComputerAndMobilePicture/index.tsx","pages/About/styles.tsx","pages/About/index.tsx","hooks/useOnScreen.tsx","components/Navbar/styles.tsx","components/Navbar/MenuItem.tsx","components/Navbar/index.tsx","App.tsx","serviceWorker.ts","Translation/i18n.ts","Translation/en.ts","index.tsx"],"names":["module","exports","theme","fontSize","headline","large","medium","small","colors","primary","primaryDark","primaryLight","secondary","secondaryDark","secondaryLight","background","text","shadow","sizes","header","routes","Text","styled","span","props","color","size","className","children","createAnimationMap","animatedElements","reduce","accumulator","currentAnimation","totalAnimationDuration","duration","animationMapping","name","animationDuration","animationDelay","createCSSAnimation","animation","elementName","animationOptions","css","DotGrow","keyframes","FadeIn","PictureOfMine","div","img","Dot","dotRadius","elements","circleElementsToAnimate","textAnimationMap","circleAnimationMap","IntroContainer","TextContainer","WelcomeText","AboutDescription","TextBlock","PictureContainer","AnimatedPicture","AnimatedDot","DownloadCvLink","a","Intro","t","useTranslation","href","Image","ComputerAndMobilePicture","src","AboutContainer","WhatIDoPictureContainer","SquareBehindPic","About","aboutRef","useRef","isOnScreen","ref","rootMargin","useState","hasIntersected","setIntersecting","useEffect","observer","IntersectionObserver","entry","isIntersecting","current","observe","unobserve","useOnScreen","NavbarContainer","MenuItemsContainer","MenuItem","Link","to","spy","smooth","offset","Navbar","App","Boolean","window","location","hostname","match","resources","en","translation","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ee8611c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LoicNoBg.050af776.png\";","module.exports = __webpack_public_path__ + \"static/media/ComputerAndMobile.f94706e8.jpg\";","import { DefaultTheme } from 'styled-components';\n\nexport const theme: DefaultTheme = {\n  fontSize: {\n    headline: '60px',\n    large: '30px',\n    medium: '20px',\n    small: '16px',\n  },\n  // https://material.io/design/color/the-color-system.html#tools-for-picking-colors\n  colors: {\n    primary: '#1a73e8',\n    primaryDark: '#1f41b6',\n    primaryLight: '#34a4ff',\n    secondary: '#e88f1a',\n    secondaryDark: '#d15b0e',\n    secondaryLight: '#f0b755',\n    background: '#ffffff',\n    text: 'black',\n    shadow: 'rgba(210,210,210,0.5)',\n  },\n  sizes: {\n    header: 70,\n  },\n};\n","export const routes = {\n  resume: 'resume',\n  about: 'about',\n};\n","import styled, { DefaultTheme } from 'styled-components';\n\ninterface StyledProps {\n  color?: keyof DefaultTheme['colors'];\n  size?: keyof DefaultTheme['fontSize'];\n}\n\nexport const Text = styled.span<StyledProps>`\n  ${(props) => props.color && `color: ${props.theme.colors[props.color]};`}\n  ${(props) => props.size && `font-size: ${props.theme.fontSize[props.size]};}`}\n`;\n","import React from 'react';\nimport { DefaultTheme } from 'styled-components';\n\nimport * as Styled from './styles';\n\ninterface PropsType {\n  className?: string;\n  color?: keyof DefaultTheme['colors'];\n  size?: keyof DefaultTheme['fontSize'];\n  children: React.ReactNode | React.ReactNode[];\n}\n\nexport const Text: React.FC<PropsType> = ({\n  className,\n  color,\n  size,\n  children,\n}: PropsType) => {\n  return (\n    <Styled.Text color={color} size={size} className={className}>\n      {children}\n    </Styled.Text>\n  );\n};\n","import { Keyframes, css, FlattenSimpleInterpolation } from 'styled-components';\n\n/** Infos on an element to animate */\nexport interface AnimationDescription {\n  name: string;\n  /** duration of the animation in seconds */\n  duration: number;\n}\n\n/** CSS animation properties */\ninterface AnimationProperties {\n  animationDuration: string;\n  animationDelay: string;\n}\n\n/** Array which maps an element name to an object with its CSS animation properties */\ninterface AnimationMap {\n  [animatedElement: string]: AnimationProperties;\n}\n\n/**\n * Creates an object which will map objects to animate to their corresponding\n * CSS animation properties in order to make them appear one by one\n * @param animatedElements A sorted array of the elements we want to animate\n */\nexport function createAnimationMap(\n  animatedElements: AnimationDescription[]\n): AnimationMap {\n  const { animationMapping } = animatedElements.reduce<{\n    totalAnimationDuration: number;\n    animationMapping: AnimationMap;\n  }>(\n    (accumulator, currentAnimation) => ({\n      totalAnimationDuration:\n        accumulator.totalAnimationDuration + currentAnimation.duration,\n      animationMapping: {\n        ...accumulator.animationMapping,\n        [currentAnimation.name]: {\n          animationDuration: `${currentAnimation.duration}s`,\n          animationDelay: `${accumulator.totalAnimationDuration}s`,\n        },\n      },\n    }),\n    {\n      totalAnimationDuration: 0,\n      animationMapping: {},\n    }\n  );\n\n  return animationMapping;\n}\n\n/**\n * Animations helpers\n */\n\n/**\n * Auto creates animation and animation delay for a given element and a given AnimationMap\n * @param animation Styled component animation keyframe\n * @param elementName Name of the element to animate\n * @param animationOptions Additional options for the animation besides keyframe and duration\n */\nexport function createCSSAnimation(\n  animation: Keyframes,\n  elementName: string,\n  animationMapping: AnimationMap,\n  animationOptions?: string\n): FlattenSimpleInterpolation {\n  return css`\n    animation: ${animation} ${animationMapping[elementName].animationDuration}\n      ${animationOptions};\n    animation-delay: ${animationMapping[elementName].animationDelay};\n    animation-fill-mode: forwards;\n  `;\n}\n","import { keyframes } from 'styled-components';\n\n/**\n * Make dot grow form radius=0 to specified radius\n */\nexport const DotGrow = keyframes`\n  0% {\n    transform: scale(0)\n  } \n  100% {\n    transform: scale(1)\n  }\n`;\n\n/**\n * Gradually appears while translating downwards\n */\nexport const FadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translate(0, 20px)\n  } \n  to {\n    opacity: 1;\n  }\n`;\n","import styled from 'styled-components';\nimport img from '../../assets/images/LoicNoBg.png';\n\nexport const PictureOfMine = styled.div`\n  height: 100%;\n  width: 100%;\n  background-image: url(${img});\n  background-size: 100%;\n`;\n","import styled from 'styled-components';\n\ninterface StyledProps {\n  dotRadius: string;\n}\n\nexport const Dot = styled.span<StyledProps>`\n  height: ${(props) => props.dotRadius};\n  width: ${(props) => props.dotRadius};\n  background-color: ${(props) => props.theme.colors.primary};\n  border-radius: 50%;\n  display: flex;\n  align-items: flex-end;\n  overflow: hidden;\n  animation-fill-mode: forwards;\n`;\n","import {\n  AnimationDescription,\n  createAnimationMap,\n} from '../../Animations/animationScheduler';\n\nexport const elements = {\n  HEADLINE: 'headline',\n  DESCRIPTION: 'description',\n  CIRCLE: 'circle',\n  PICTURE: 'picture',\n};\n\nconst textElementsToAnimate: AnimationDescription[] = [\n  { name: elements.HEADLINE, duration: 0.8 },\n  { name: elements.DESCRIPTION, duration: 0.8 },\n];\n\nconst circleElementsToAnimate: AnimationDescription[] = [\n  { name: elements.CIRCLE, duration: 0.8 },\n  { name: elements.PICTURE, duration: 0.8 },\n];\n\nexport const textAnimationMap = createAnimationMap(textElementsToAnimate);\n\nexport const circleAnimationMap = createAnimationMap(circleElementsToAnimate);\n","import styled from 'styled-components';\n\nimport { createCSSAnimation } from '../../Animations/animationScheduler';\nimport { FadeIn, DotGrow } from '../../Animations/keyframes';\n\nimport { MyPicture } from '../../components/MyPicture';\nimport { BigDot } from '../../components/BigDot';\n\nimport { circleAnimationMap, textAnimationMap, elements } from './animations';\n\nexport const IntroContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  height: auto;\n  margin-top: 50px;\n  margin-bottom: 100px;\n`;\n\nexport const TextContainer = styled.div`\n  flex: 0 1 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 20px 0;\n`;\n\nexport const WelcomeText = styled.div`\n  font-size: ${(props) => props.theme.fontSize.headline};\n  text-align: center;\n  margin: 50px;\n  opacity: 0;\n  ${createCSSAnimation(FadeIn, elements.HEADLINE, textAnimationMap)}\n`;\n\nexport const AboutDescription = styled.div`\n  font-size: ${(props) => props.theme.fontSize.large};\n  text-align: center;\n  opacity: 0;\n  ${createCSSAnimation(FadeIn, elements.DESCRIPTION, textAnimationMap)}\n`;\n\nexport const TextBlock = styled.div`\n  margin-bottom: 20px;\n  font-size: ${(props) => props.theme.fontSize.large};\n`;\n\nexport const PictureContainer = styled.div`\n  flex: 0 1 400px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const AnimatedPicture = styled(MyPicture)`\n  opacity: 0;\n  ${createCSSAnimation(FadeIn, elements.PICTURE, circleAnimationMap)}\n`;\n\nexport const AnimatedDot = styled(BigDot)`\n  transform: scale(0);\n  ${createCSSAnimation(DotGrow, elements.CIRCLE, circleAnimationMap)};\n  margin: 10px;\n`;\n\nexport const DownloadCvLink = styled.a`\n  margin-top: 10px;\n  border: solid 2px ${(props) => props.theme.colors.primary};\n  padding: 5px;\n  text-decoration: none;\n  opacity: 0;\n  font-weight: 500;\n  ${createCSSAnimation(FadeIn, elements.DESCRIPTION, textAnimationMap)}\n`;\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface PropsType {\n  className?: string;\n}\n\nexport const MyPicture: React.FC<PropsType> = (props: PropsType) => {\n  return <Styled.PictureOfMine className={props?.className} />;\n};\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface PropsType {\n  className?: string;\n  children?: React.ReactNode;\n  dotRadius: string;\n}\n\nexport const BigDot: React.FC<PropsType> = (props: PropsType) => {\n  return (\n    <Styled.Dot className={props?.className} dotRadius={props.dotRadius}>\n      {props.children}\n    </Styled.Dot>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Element as ScrollAnchor } from 'react-scroll';\n\nimport { routes } from '../../routes';\nimport { Text } from '../../components/Text';\n\nimport * as Styled from './styles';\n\nexport const Intro: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <ScrollAnchor name={routes.resume} />\n      <Styled.IntroContainer>\n        <Styled.TextContainer>\n          <Styled.WelcomeText>{t('intro.welcome')}</Styled.WelcomeText>\n          <Styled.AboutDescription>\n            <Styled.TextBlock>\n              <Text>{t('intro.iAm')}</Text>\n              <Text color=\"secondaryDark\">{t('intro.LoicChau')}</Text>\n            </Styled.TextBlock>\n            <Styled.TextBlock>\n              <Text>{t('intro.whatIAm')}</Text>\n            </Styled.TextBlock>\n          </Styled.AboutDescription>\n          <Styled.DownloadCvLink href=\"LoicChauCv.pdf\">\n            <Text color=\"primary\" size=\"small\">\n              {t('intro.downloadCv')}\n            </Text>\n          </Styled.DownloadCvLink>\n        </Styled.TextContainer>\n        <Styled.PictureContainer>\n          <Styled.AnimatedDot dotRadius=\"400px\">\n            <Styled.AnimatedPicture />\n          </Styled.AnimatedDot>\n        </Styled.PictureContainer>\n      </Styled.IntroContainer>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  height: 100%;\n  width: 100%;\n`;\n","import React from 'react';\n\nimport img from '../../assets/images/ComputerAndMobile.jpg';\n\nimport * as Styled from './styles';\n\ninterface PropsType {\n  className?: string;\n}\n\nexport const ComputerAndMobilePicture: React.FC<PropsType> = (\n  props: PropsType\n) => {\n  return <Styled.Image className={props.className} src={img} />;\n};\n","import styled from 'styled-components';\n\nexport const AboutContainer = styled.div<{ isOnScreen: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  height: auto;\n  margin-bottom: 500px;\n`;\n\nexport const TextContainer = styled.div`\n  flex: 0 1 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 40px;\n`;\n\nexport const TextBlock = styled.div`\n  margin-bottom: 20px;\n  font-size: ${(props) => props.theme.fontSize.large};\n`;\n\nexport const WhatIDoPictureContainer = styled.div`\n  flex: 0 1 500px;\n  display: flex;\n  justify-content: center;\n  width: 500px;\n  &: after;\n  margin: 50px;\n  position: relative;\n`;\n\nexport const SquareBehindPic = styled.div`\n  background-color: ${(props) => props.theme.colors.primary};\n  height: 330px;\n  width: 500px;\n  position: absolute;\n  top: -20px;\n  left: -20px;\n  z-index: -10;\n`;\n","import React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Element as ScrollAnchor } from 'react-scroll';\n\nimport { routes } from '../../routes';\nimport { Text } from '../../components/Text';\nimport { ComputerAndMobilePicture } from '../../components/ComputerAndMobilePicture';\nimport { useOnScreen } from '../../hooks/useOnScreen';\n\nimport * as Styled from './styles';\n\nexport const About: React.FC = () => {\n  const { t } = useTranslation();\n  const aboutRef = useRef<HTMLDivElement>(null);\n\n  const isOnScreen = useOnScreen(aboutRef, '-350px');\n\n  return (\n    <>\n      <ScrollAnchor name={routes.about} />\n      <Styled.AboutContainer ref={aboutRef} isOnScreen={isOnScreen}>\n        <Styled.WhatIDoPictureContainer>\n          <Styled.SquareBehindPic></Styled.SquareBehindPic>\n          <ComputerAndMobilePicture />\n        </Styled.WhatIDoPictureContainer>\n        <Styled.TextContainer>\n          <Styled.TextBlock>\n            <Text>{t('about.myDriveBeginning')} </Text>\n            <Text color=\"primary\">{t('about.faster')}</Text>\n            <Text> {t('about.and')} </Text>\n            <Text color=\"primary\">{t('about.easier')}</Text>\n          </Styled.TextBlock>\n          <Styled.TextBlock>\n            <Text>{t('about.gamingLedTo')} </Text>\n            <Text color=\"secondaryDark\">{t('about.softwareEngineering')}</Text>\n          </Styled.TextBlock>\n        </Styled.TextContainer>\n      </Styled.AboutContainer>\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useState, useEffect, MutableRefObject } from 'react';\n\n// FOUND ON :\n// https://usehooks.com/useOnScreen/\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useOnScreen(ref: MutableRefObject<any>, rootMargin = '0px') {\n  // State and setter for storing whether element is visible\n  const [hasIntersected, setIntersecting] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        // Update our state when observer callback fires\n        setIntersecting(entry.isIntersecting);\n      },\n      {\n        rootMargin,\n      }\n    );\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => {\n      observer.unobserve(ref.current);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return hasIntersected;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-scroll';\n\nexport const NavbarContainer = styled.div`\n  height: ${(props) => props.theme.sizes.header}px;\n  width: 100%;\n  box-shadow: 0px 1px 5px 1px ${(props) => props.theme.colors.shadow};\n  display: flex;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background-color: ${(props) => props.theme.colors.background};\n`;\n\nexport const MenuItemsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 100px;\n`;\n\nexport const MenuItem = styled(Link)`\n  margin: 0 30px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  font-size: ${(props) => props.theme.fontSize.medium};\n  cursor: pointer;\n  transition: transform 0.2s;\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  /* Improve blurry animation on Chrome */\n  backface-visibility: hidden;\n  -webkit-font-smoothing: subpixel-antialiased;\n`;\n","import React from 'react';\n\nimport * as Styled from './styles';\nimport { theme } from '../../Theme';\n\ninterface PropsType {\n  className?: string;\n  to: string;\n  children: React.ReactNode;\n}\n\nexport const MenuItem: React.FC<PropsType> = (props: PropsType) => {\n  return (\n    <Styled.MenuItem\n      to={props.to}\n      spy={true}\n      smooth={true}\n      offset={-theme.sizes.header}\n      duration={500}\n    >\n      {props.children}\n    </Styled.MenuItem>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { routes } from '../../routes';\n\nimport { MenuItem } from './MenuItem';\nimport * as Styled from './styles';\n\ninterface PropsType {\n  className?: string;\n}\n\nexport const Navbar: React.FC<PropsType> = (props: PropsType) => {\n  const { t } = useTranslation();\n\n  return (\n    <Styled.NavbarContainer className={props?.className}>\n      <Styled.MenuItemsContainer>\n        <MenuItem to={routes.resume}>{t('navbar.resume')}</MenuItem>\n        <MenuItem to={routes.about}>{t('navbar.about')}</MenuItem>\n        <MenuItem to={routes.about}>{t('navbar.projects')}</MenuItem>\n      </Styled.MenuItemsContainer>\n    </Styled.NavbarContainer>\n  );\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { theme } from './Theme';\n\nimport { Intro } from './pages/Intro';\nimport { About } from './pages/About';\nimport { Navbar } from './components/Navbar';\n\nconst App: React.FC = () => (\n  <ThemeProvider theme={theme}>\n    <Navbar />\n    <Intro />\n    <About />\n  </ThemeProvider>\n);\n\nexport default App;\n","/* eslint-disable no-unused-vars */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport { enTranslations } from './en';\n\n// the translations\nconst resources = {\n  en: enTranslations,\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en',\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","export const enTranslations = {\n  translation: {\n    'intro.welcome': 'Hey 👋😉',\n    'intro.iAm': \"I'm \",\n    'intro.LoicChau': 'Loïc Chau',\n    'intro.whatIAm': 'Software engineer',\n    'intro.downloadCv': 'Download CV',\n    'about.myDriveBeginning':\n      'What drives me is helping people achieve their goals',\n    'about.and': 'and',\n    'about.faster': 'faster',\n    'about.easier': 'easier',\n    'about.gamingLedTo':\n      'Spending time on my computer gaming thus led me to become interested in',\n    'about.softwareEngineering': 'software engineering',\n    'navbar.resume': 'Resume',\n    'navbar.about': 'About me',\n    'navbar.projects': 'My Projects',\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport './Translation/i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}